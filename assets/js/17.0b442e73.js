(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{310:function(t,v,_){"use strict";_.r(v);var o=_(14),a=Object(o.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p"),v("div",{staticClass:"table-of-contents"},[v("ul",[v("li",[v("a",{attrs:{href:"#_1-bom-简介"}},[t._v("1.BOM 简介")])]),v("li",[v("a",{attrs:{href:"#_2-window-对象"}},[t._v("2.window 对象")]),v("ul",[v("li",[v("a",{attrs:{href:"#常用属性"}},[t._v("常用属性")])]),v("li",[v("a",{attrs:{href:"#常用事件"}},[t._v("常用事件")])])])]),v("li",[v("a",{attrs:{href:"#_3-定时器"}},[t._v("3. 定时器")])]),v("li",[v("a",{attrs:{href:"#_4-js-执行机制"}},[t._v("4.JS 执行机制")])]),v("li",[v("a",{attrs:{href:"#_5-location-对象"}},[t._v("5.location 对象")])]),v("li",[v("a",{attrs:{href:"#_6-navigator-对象"}},[t._v("6.navigator 对象")])]),v("li",[v("a",{attrs:{href:"#_7-history-对象"}},[t._v("7.history 对象")])])])]),v("p"),t._v(" "),v("h2",{attrs:{id:"_1-bom-简介"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-bom-简介"}},[t._v("#")]),t._v(" 1.BOM 简介")]),t._v(" "),v("p",[t._v("BOM（Browser Object Model）即浏览器对象模型，它提供了独立于内容而与浏览器窗口进行交互的对象，其核心对象是 window。")]),t._v(" "),v("p",[t._v("从根本上讲，BOM 只是处理浏览器窗口和框架；但人们习惯上也把所有针对浏览器的 JavaScript 扩展算作 BOM 的一部分。")]),t._v(" "),v("p",[v("code",[t._v("window")]),t._v(":")]),t._v(" "),v("ul",[v("li",[v("p",[v("code",[t._v("document")])])]),t._v(" "),v("li",[v("p",[v("code",[t._v("location")])])]),t._v(" "),v("li",[v("p",[v("code",[t._v("navigation")])])]),t._v(" "),v("li",[v("p",[v("code",[t._v("screen")])])]),t._v(" "),v("li",[v("p",[v("code",[t._v("history")])])])]),t._v(" "),v("h2",{attrs:{id:"_2-window-对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-window-对象"}},[t._v("#")]),t._v(" 2.window 对象")]),t._v(" "),v("h3",{attrs:{id:"常用属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常用属性"}},[t._v("#")]),t._v(" 常用属性")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("window.innerHeight")]),t._v("：网页在当前窗口中可见部分的高度，即“视口”（viewport）的大小（单位像素）。")]),t._v(" "),v("li",[v("code",[t._v("window.innerWidth")]),t._v("：网页在当前窗口中可见部分的宽度。")])]),t._v(" "),v("h3",{attrs:{id:"常用事件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常用事件"}},[t._v("#")]),t._v(" 常用事件")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("窗口加载事件")]),t._v(" "),v("ul",[v("li",[v("p",[v("code",[t._v("window.onload = function() {};")]),t._v(" 或者 "),v("code",[t._v('window.addEventListener("load", function() {});')])]),t._v(" "),v("p",[t._v("window.onload 是窗口（页面）加载事件，当文档内容完全加载完成后会触发事件（包括图像、脚本文件、CSS 文件）。")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("document.addEventListener('DOMContentLoaded', function() {});")])]),t._v(" "),v("p",[t._v("DOMContentLoaded 事件触发时，仅当 DOM 加载完成，不包括样式、图片、flash 等。")]),t._v(" "),v("p",[t._v("IE9 以上才支持。")]),t._v(" "),v("p",[t._v("如果页面的图片很多的话，从用户访问到 onload 触发可能需要比较长的时间，交互效果就不能实现，必然影响用户的体验，此时用 DOMContentLoaded 事件比较合适。")])])])]),t._v(" "),v("li",[v("p",[t._v("调整窗口大小事件")]),t._v(" "),v("p",[v("code",[t._v("window.onresize = function() {};")]),t._v(" 或 "),v("code",[t._v('window.addEventListener("resize",function() {});')])]),t._v(" "),v("p",[t._v("window.onresize 是调整窗口大小加载事件，当触发时就调用的处理函数。")])])]),t._v(" "),v("h2",{attrs:{id:"_3-定时器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-定时器"}},[t._v("#")]),t._v(" 3. 定时器")]),t._v(" "),v("ul",[v("li",[v("p",[v("code",[t._v("window.setTimeout（回调函数，[延迟的毫秒数]);")])]),t._v(" "),v("p",[t._v("setTimeout() 方法用于设置一个定时器，该定时器在定时器到期后执行回调函数。")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("window.clearTimeout(timeoutID);")]),t._v("\nclearTimeout() 方法用来取消先前通过调用 setTimeout() 建立的定时器。timeoutID 是定时器的标识符。")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("window.setInterval（回调函数，[延迟的毫秒数]);")]),t._v("\nsetInterval() 方法重复调用回调函数，每隔规定时间，就去调用一次回调函数。")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("window.clearInterval(intervalID);")]),t._v("\nclearInterval() 方法用来取消先前通过调用 setInterval() 建立的定时器。intervalID 是定时器的标识符。")])])]),t._v(" "),v("h2",{attrs:{id:"_4-js-执行机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-js-执行机制"}},[t._v("#")]),t._v(" 4.JS 执行机制")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("同步和异步")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("同步任务")]),t._v(" "),v("p",[t._v("同步任务都在主线程上执行，形成一个执行栈。")])]),t._v(" "),v("li",[v("p",[t._v("异步任务")]),t._v(" "),v("p",[t._v("异步任务是通过回调函数实现的。")]),t._v(" "),v("p",[t._v("一般而言，异步任务有三种类型：")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1、普通事件，如 click、resize 等。")])]),t._v(" "),v("li",[v("p",[t._v("2、资源加载，如 load、error 等。")])]),t._v(" "),v("li",[v("p",[t._v("3、定时器，包括 setInterval、setTimeout 等。")])])])])])]),t._v(" "),v("li",[v("p",[t._v("宏任务和微任务")]),t._v(" "),v("p",[t._v("宏任务分为同步任务和异步任务。同时普通任务队列和延迟任务队列中的任务都属于宏任务。延迟队列专门处理如"),v("code",[t._v("setTimeout")]),t._v("/"),v("code",[t._v("setInterval")]),t._v("这样的定时器的回调任务。宏队列里放的是一系列宏任务。")]),t._v(" "),v("p",[v("code",[t._v("宏队列：[宏任务 1，宏任务 2，...]")])]),t._v(" "),v("p",[t._v("微任务有：Promise 的回调等。微队列里放的是一系列微任务。")]),t._v(" "),v("p",[v("code",[t._v("微队列：[微任务 1，微任务 2，...]")])]),t._v(" "),v("p",[t._v("规则：每次要执行宏队列里的一个任务之前，先看微队列里是否有待执行的微任务")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("如果有，先执微任务")])]),t._v(" "),v("li",[v("p",[t._v("如果没有，按照宏队列里任务的顺序，依次执行")])])])]),t._v(" "),v("li",[v("p",[t._v("JS 执行机制")]),t._v(" "),v("ol",[v("li",[t._v("一开始整段脚本作为第一个宏任务来执行。")]),t._v(" "),v("li",[t._v("把同步代码直接压入执行栈进行执行。宏任务的异步任务进入宏任务队列，微任务进入微任务队列。")]),t._v(" "),v("li",[t._v("当前宏任务执行完出队，检查微任务队列，如果有则依次执行，直到微任务队列为空。")]),t._v(" "),v("li",[t._v("执行宏队列队首新的宏任务，回到 2，依次循环，直到宏任务和微任务队列都为空。")])]),t._v(" "),v("p",[t._v("一旦执行栈中的所有同步任务执行完毕，系统就会按次序读取任务队列中的异步任务，于是被读取的异步任务结束等待状态，进入执行栈，开始执行。")]),t._v(" "),v("p",[t._v("由于主线程不断的重复获得任务、执行任务、再获得任务、再执行，所以这种机制被称为事件循环（event loop）。")])])]),t._v(" "),v("h2",{attrs:{id:"_5-location-对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-location-对象"}},[t._v("#")]),t._v(" 5.location 对象")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("location 对象属性")]),t._v(" "),v("th",[t._v("返回值")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("location.href")]),t._v(" "),v("td",[t._v("获取或设置整个 URL")])]),t._v(" "),v("tr",[v("td",[t._v("location.host")]),t._v(" "),v("td",[t._v("返回主机（域名）")])]),t._v(" "),v("tr",[v("td",[t._v("location.port")]),t._v(" "),v("td",[t._v("返回端口号")])]),t._v(" "),v("tr",[v("td",[t._v("location.pathname")]),t._v(" "),v("td",[t._v("返回路径")])]),t._v(" "),v("tr",[v("td",[t._v("location.search")]),t._v(" "),v("td",[t._v("返回参数")])]),t._v(" "),v("tr",[v("td",[t._v("location.hash")]),t._v(" "),v("td",[t._v("返回片段   #后面内容  常见于链接 锚点")])])])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("location 对象方法")]),t._v(" "),v("th",[t._v("返回值")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("location.assign('URL')")]),t._v(" "),v("td",[t._v("跟 href 一样，可以跳转页面（也可以重定向页面）")])]),t._v(" "),v("tr",[v("td",[t._v("location.replace('URL')")]),t._v(" "),v("td",[t._v("替换当前页面，因为不记录历史，所以不能后退页面")])]),t._v(" "),v("tr",[v("td",[t._v("location.reload()")]),t._v(" "),v("td",[t._v("重新加载页面，相当于刷新按钮或 F5 。如果参数是 true，强制刷新 ctrl  + F5")])])])]),t._v(" "),v("h2",{attrs:{id:"_6-navigator-对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-navigator-对象"}},[t._v("#")]),t._v(" 6.navigator 对象")]),t._v(" "),v("p",[t._v("navigator 对象包含有关浏览器的信息。")]),t._v(" "),v("h2",{attrs:{id:"_7-history-对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-history-对象"}},[t._v("#")]),t._v(" 7.history 对象")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("history 对象方法")]),t._v(" "),v("th",[t._v("作用")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("back()")]),t._v(" "),v("td",[t._v("后退")])]),t._v(" "),v("tr",[v("td",[t._v("forward()")]),t._v(" "),v("td",[t._v("前进")])]),t._v(" "),v("tr",[v("td",[t._v("go（参数）")]),t._v(" "),v("td",[t._v("前进或后退    go(1) 前进一个页面    go(-1) 后退一个页面")])])])])])}),[],!1,null,null,null);v.default=a.exports}}]);