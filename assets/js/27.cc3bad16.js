(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{327:function(t,a,s){"use strict";s.r(a);var e=s(14),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"vue-基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-基础"}},[t._v("#")]),t._v(" Vue 基础")]),t._v(" "),a("h3",{attrs:{id:"_1-v-if-和-v-show-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-v-if-和-v-show-的区别"}},[t._v("#")]),t._v(" 1. v-if 和 v-show 的区别？")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("手段")]),t._v(" "),a("p",[t._v("v-if 是动态的向 DOM 树内添加或者删除 DOM 元素；v-show 是通过设置 DOM 元素的 display 样式属性控制显隐。")])]),t._v(" "),a("li",[a("p",[t._v("编译过程")]),t._v(" "),a("p",[t._v("v-if 切换有一个局部编译/卸载的过程，切换过程中合适地销毁和重建内部的事件监听和子组件；v-show 只是简单的基于 css 切换。")])]),t._v(" "),a("li",[a("p",[t._v("编译条件")]),t._v(" "),a("p",[t._v("v-if 是惰性的，如果初始条件为假，则什么也不做；只有在条件第一次变为真时才开始局部编译；v-show 是在任何条件下，无论首次条件是否为真，都被编译，然后被缓存，而且 DOM 元素保留。")])]),t._v(" "),a("li",[a("p",[t._v("性能消耗")]),t._v(" "),a("p",[t._v("v-if 有更高的切换消耗；v-show 有更高的初始渲染消耗。")])]),t._v(" "),a("li",[a("p",[t._v("使用场景")]),t._v(" "),a("p",[t._v("v-if 适合不大可能改变；v-show 适合频繁切换。")])])]),t._v(" "),a("h3",{attrs:{id:"_2-如何理解-mvvm的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何理解-mvvm的"}},[t._v("#")]),t._v(" 2. 如何理解 MVVM的？")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("MVVM 是 Model-View-ViewModel  的缩写。")]),t._v(" "),a("p",[t._v("M: 模型（Model）: data 中的数据。")]),t._v(" "),a("p",[t._v("V: 视图（View）: 模板代码。")]),t._v(" "),a("p",[t._v("VM: 视图模型（ViewModel）: Vue 实例。")])]),t._v(" "),a("li",[a("p",[t._v("核心是提供对 View 和 ViewModel 的双向数据绑定。当数据改变的时候，ViewModel 能监听到数据的变化，自动更新视图，当用户操作视图的时候，ViewModel 也可以监听到视图的变化，然后通知数据进行改动，这就实现了双向数据绑定。ViewModel 通过双向数据绑定把 View 和 Model 连接起来，它们之间的同步是自动的，不需要人为干涉，所以我们只需要关注业务逻辑即可，不需要操作 DOM，同时也不需要关注数据的状态问题，因为它是由 MVVM 统一管理。")])])]),t._v(" "),a("h3",{attrs:{id:"_3-使用-object-defineproperty-来进行数据劫持有什么缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用-object-defineproperty-来进行数据劫持有什么缺点"}},[t._v("#")]),t._v(" 3. 使用 Object.defineProperty() 来进行数据劫持有什么缺点？")]),t._v(" "),a("p",[t._v("在对一些属性进行操作时，使用这种方法无法拦截，比如通过下标方式修改数组数据或者给对象新增属性，这都不能触发组件的重新渲染，因为 Object.defineProperty 不能拦截到这些操作。")]),t._v(" "),a("p",[t._v("更精确的来说，对于数组而言，大部分操作都是拦截不到的，只是 Vue 内部通过重写函数的方式解决了这个问题。")]),t._v(" "),a("h3",{attrs:{id:"_4-vue-中的-key-值的作用是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-vue-中的-key-值的作用是什么"}},[t._v("#")]),t._v(" 4. Vue 中的 key 值的作用是什么？")]),t._v(" "),a("p",[t._v("为了给 Vue 一个提示，以便它能跟踪每个节点的身份，从而重用和重新排序现有元素。")]),t._v(" "),a("ul",[a("li",[t._v("第一种情况是 v-if 中使用 key。由于 Vue 会尽可能高效地渲染元素，通常会复用已有元素而不是从头开始渲染。因此当使用 v-if 来实现元素切换的时候，如果切换前后含有相同类型的元素，那么这个元素就会被复用。如果是相同的 input 元素，那么切换前后用户的输入不会被清除掉，这样是不符合需求的。因此可以通过使用 key 来唯一的标识一个元素，这个情况下，使用 key 的元素不会被复用。这个时候 key 的作用是用来标识一个独立的元素。")]),t._v(" "),a("li",[t._v("第二种情况是 v-for 中使用 key。用 v-for 更新已渲染过的元素列表时，它默认使用“就地复用”的策略。如果数据项的顺序发生了改变，Vue 不会移动 DOM 元素来匹配数据项的顺序，而是简单复用此处的每个元素。因此通过为每个列表项提供一个 key 值，来以便 Vue 跟踪元素的身份，从而高效的实现复用。这个时候 key 的作用是为了高效的更新渲染虚拟 DOM。")])]),t._v(" "),a("p",[t._v("Vue 为了更高效的渲染元素，会尽可能的复用元素，而非从头渲染，key 可以为节点打标记，而非简单的复用节点。当数据发生变化时，Vue 会根据【新数据】生成【新的虚拟 DOM】, 随后Vue进行【新虚拟 DOM】与【旧虚拟 DOM】的差异比较，比较规则。")]),t._v(" "),a("ul",[a("li",[t._v("旧虚拟 DOM 中找到了与新虚拟 DOM 相同的 key\n"),a("ul",[a("li",[t._v("若虚拟 DOM 中内容没变, 直接使用之前的真实 DOM；")]),t._v(" "),a("li",[t._v("若虚拟 DOM 中内容变了, 则生成新的真实 DOM，随后替换掉页面中之前的真实 DOM。")])])]),t._v(" "),a("li",[t._v("旧虚拟 DOM 中未找到与新虚拟 DOM 相同的 key\n"),a("ul",[a("li",[t._v("创建新的真实 DOM，随后渲染到到页面。")])])])]),t._v(" "),a("h3",{attrs:{id:"_5-v-if-和-v-for-哪个优先级更高-如果同时出现-应如何优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-v-if-和-v-for-哪个优先级更高-如果同时出现-应如何优化"}},[t._v("#")]),t._v(" 5. v-if 和 v-for 哪个优先级更高？如果同时出现，应如何优化？")]),t._v(" "),a("p",[t._v("vue2.0 版本中 v-for 优先于 v-if 被解析，如果同时出现，每次渲染都会先执行循环再判断条件，无论如何循环都不可避免，浪费了性能。要避免出现这种情况，则在外层嵌套 template，在这一层进行 v-if 判断，然后在内部进行 v-for 循环。如果条件出现在循环内部，可通过计算属性提前过滤掉那些不需要显示的项。")]),t._v(" "),a("p",[t._v("3.x 版本中 v-if 总是优先于 v-for 生效。")]),t._v(" "),a("h3",{attrs:{id:"_6-v-model-的实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-v-model-的实现原理"}},[t._v("#")]),t._v(" 6. v-model 的实现原理")]),t._v(" "),a("p",[t._v("vue 中 v-model 可以实现数据的双向绑定，但是为什么这个指令就可以实现数据的双向绑定呢？其实 v-model 是 vue 的一个语法糖。即利用 v-model 绑定数据后，既绑定了数据，又添加了一个 input 事件监听。")]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-model")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--等价于：--\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":value")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@input")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text = $event.target.value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h3",{attrs:{id:"_7-常见的-vue-性能优化方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-常见的-vue-性能优化方法"}},[t._v("#")]),t._v(" 7. 常见的 Vue 性能优化方法")]),t._v(" "),a("ul",[a("li",[t._v("路由懒加载")]),t._v(" "),a("li",[t._v("keep-alive 缓存页面")]),t._v(" "),a("li",[t._v("使用 v-show 复用 DOM")]),t._v(" "),a("li",[t._v("v-for 遍历避免同时使用 v-if")]),t._v(" "),a("li",[t._v("长列表滚动到可视区域动态加载")]),t._v(" "),a("li",[t._v("图片懒加载")]),t._v(" "),a("li",[t._v("第三方插件按需引入")]),t._v(" "),a("li",[t._v("SSR（服务端渲染）")])]),t._v(" "),a("h2",{attrs:{id:"vue-router"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-router"}},[t._v("#")]),t._v(" Vue Router")]),t._v(" "),a("h3",{attrs:{id:"_1-vue-router-跳转和-location-href-有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-vue-router-跳转和-location-href-有什么区别"}},[t._v("#")]),t._v(" 1. Vue Router 跳转和 location.href 有什么区别？")]),t._v(" "),a("p",[t._v("使用 location.href= ‘/url’ 来跳转，简单方便，但是刷新了页面。")]),t._v(" "),a("p",[t._v("引进 Vue Router，然后使用 router.push( ‘/url’ ) 来跳转，无刷新页面，静态跳转。使用了 diff 算法，实现了按需加载，减少了 dom 的消耗。使用 router 跳转底层是用 history.pushState()。")]),t._v(" "),a("h3",{attrs:{id:"_2-如何获取页面的hash变化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何获取页面的hash变化"}},[t._v("#")]),t._v(" 2. 如何获取页面的hash变化？")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("监听 $route 的变化")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("watch")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("$route")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handler")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldVal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("deep")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("window.location.hash")]),t._v(" 读取#值。")]),t._v(" "),a("p",[a("code",[t._v("window.location.hash")]),t._v(" 的值可读可写，读取来判断状态是否改变，写入时可以在不重载网页的前提下，添加一条历史访问记录。")])])]),t._v(" "),a("h3",{attrs:{id:"_3-路由传递参数-对象写法-path-是否可以结合-params-参数一起使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-路由传递参数-对象写法-path-是否可以结合-params-参数一起使用"}},[t._v("#")]),t._v(" 3. 路由传递参数（对象写法） path 是否可以结合 params 参数一起使用？")]),t._v(" "),a("p",[t._v("即："),a("code",[t._v("this.$router.push({ path: '/search', params: { keyword: this.keyword }, query: { k: this.keyword.toUpperCase() }, });")])]),t._v(" "),a("p",[t._v("这会报错，不能这样写。")]),t._v(" "),a("h3",{attrs:{id:"_4-如何指定-params-参数-可传可不传"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-如何指定-params-参数-可传可不传"}},[t._v("#")]),t._v(" 4. 如何指定 params 参数 可传可不传？")]),t._v(" "),a("p",[t._v("即："),a("code",[t._v('this.$router.push({ name: "search", query: { k: this.keyword.toUpperCase() }, });')])]),t._v(" "),a("p",[t._v("配置路由时，path 上加个 ? 号，代表可传参数也可不传；若不加 ? ，则 URL 会出现问题。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/search/:keyword?"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("component")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Search"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("meta")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("show")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对象形式路由传递参数")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"search"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("h3",{attrs:{id:"_5-params-参数-可以传递也可以不传递-但是如果传递是空串-如何解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-params-参数-可以传递也可以不传递-但是如果传递是空串-如何解决"}},[t._v("#")]),t._v(" 5. params 参数 可以传递也可以不传递，但是如果传递是空串，如何解决？")]),t._v(" "),a("p",[t._v("即："),a("code",[t._v("this.$router.push({name:\"search\",params:{keyWord:''},query:{k:this.keyWord}})")])]),t._v(" "),a("p",[t._v("可以使用 undefined 来解决 params 参数可以传递也可不传递（空的字符串）。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$router"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"search"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("params")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("keyword")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("query")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("k")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keyword"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_6-路由组件能不能传递-props-数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-路由组件能不能传递-props-数据"}},[t._v("#")]),t._v(" 6. 路由组件能不能传递 props 数据？")]),t._v(" "),a("p",[t._v("可以。三种写法：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/search/:keyword"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("component")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Search"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("meta")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("show")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对象形式路由传递参数")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"search"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由组件能不能传递 props 数据？")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、布尔值写法，但是这种方法只能传递 params 参数")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// props: true,")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、对象写法：额外给路由组件传递一些 props")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// props: { a: 1, b: 2 },")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数写法（常用）: 可以 params 参数、query 参数，通过 props 传递给路由组件")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$route")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("keyword")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" $route"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keyword"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("k")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" $route"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("params 参数---{{ $route.params.keyword }}"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("query 参数---{{ $route.query.k }}"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("props 数据---{{ keyword }}"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- <h1>props 数据---{{ a }}--{{ b }}</h1> --\x3e")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\nexport default { \n  name: '',\n  props: ['keyword', 'a', 'b'],\n}\n")])])]),a("h2",{attrs:{id:"vue-3-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-0"}},[t._v("#")]),t._v(" Vue 3.0")]),t._v(" "),a("h3",{attrs:{id:"_1-vue3-0-有什么更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-vue3-0-有什么更新"}},[t._v("#")]),t._v(" 1. Vue3.0 有什么更新")]),t._v(" "),a("ul",[a("li",[t._v("性能的提升\n"),a("ul",[a("li",[t._v("打包大小减少 41%")]),t._v(" "),a("li",[t._v("初次渲染快 55%，更新渲染快 133%")]),t._v(" "),a("li",[t._v("内存减少 54%")])])]),t._v(" "),a("li",[t._v("监测机制的改变\n"),a("ul",[a("li",[t._v("3.0 将带来基于代理 Proxy 的 observer 实现，提供全语言覆盖的反应性跟踪。")]),t._v(" "),a("li",[t._v("消除了 Vue2.x 当中基于 Object.defineProperty 的实现所存在的问题。\n"),a("ul",[a("li",[t._v("检测属性的添加和删除；")]),t._v(" "),a("li",[t._v("检测数组索引和长度的变更；")]),t._v(" "),a("li",[t._v("支持 Map、Set、WeakMap 和 WeakSet。")])])])])]),t._v(" "),a("li",[t._v("重写虚拟 DOM 的实现和 Tree-Shaking。")]),t._v(" "),a("li",[t._v("3.0 可以更好的支持 TypeScript")]),t._v(" "),a("li",[t._v("新的特性\n"),a("ul",[a("li",[t._v("Composition API（组合API）\n"),a("ul",[a("li",[t._v("setup 配置")]),t._v(" "),a("li",[t._v("ref 与 reactive")]),t._v(" "),a("li",[t._v("watch 与 watchEffect")]),t._v(" "),a("li",[t._v("provide 与 inject")]),t._v(" "),a("li",[t._v("...")])])]),t._v(" "),a("li",[t._v("新的内置组件\n"),a("ul",[a("li",[t._v("Fragment")]),t._v(" "),a("li",[t._v("Teleport")]),t._v(" "),a("li",[t._v("Suspense")])])]),t._v(" "),a("li",[t._v("其他改变\n"),a("ul",[a("li",[t._v("新的生命周期钩子")]),t._v(" "),a("li",[t._v("data 选项应始终被声明为一个函数")]),t._v(" "),a("li",[t._v("移除 keyCode 支持作为 v-on 的一些修饰符")]),t._v(" "),a("li",[t._v("...")])])])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);